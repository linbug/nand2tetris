// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    // Put your code here:
    Or(a=reset, b=load, out=resetorload);
    Or(a=resetorload, b=inc, out=regload);
    Mux16(b=false, a=inorincpc, sel=reset, out=regin);
    Mux16(b=in, a=incpc, sel=load, out=inorincpc);
    Inc16(in=out1, out=incpc);
    Register(in=regin , load=regload, out=out1);  
    Or16(a=out1, b=false, out=out);
}
/**
reset    load    inc == regin     regload
1        0       0      0         1
1        1       0      0         1
1        0       1      0         1
1        1       1      0         1
0        1       0      in        1
0        1       1      in        1
0        0       1      incpc     1
0        0       0      -         0
**/
